package hardware

class FontResolver {
    private val characters = mapOf<Char, UByteArray>(
        ' ' to ubyteArrayOf(0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U),
        '.' to ubyteArrayOf(0x00U, 0x00U, 0x60U, 0x60U, 0x00U, 0x00U),
        '0' to ubyteArrayOf(0x00U, 0x3CU, 0x52U, 0x4AU, 0x3CU, 0x00U),
        '1' to ubyteArrayOf(0x00U, 0x08U, 0x44U, 0x7EU, 0x40U, 0x00U),
        '2' to ubyteArrayOf(0x00U, 0x64U, 0x52U, 0x4AU, 0x44U, 0x00U),
        '3' to ubyteArrayOf(0x00U, 0x22U, 0x42U, 0x4AU, 0x36U, 0x00U),
        '4' to ubyteArrayOf(0x00U, 0x1CU, 0x10U, 0x7EU, 0x10U, 0x00U),
        '5' to ubyteArrayOf(0x00U, 0x26U, 0x4AU, 0x4AU, 0x32U, 0x00U),
        '6' to ubyteArrayOf(0x00U, 0x3CU, 0x4AU, 0x4AU, 0x32U, 0x00U),
        '7' to ubyteArrayOf(0x00U, 0x02U, 0x72U, 0x0AU, 0x06U, 0x00U),
        '8' to ubyteArrayOf(0x00U, 0x34U, 0x4AU, 0x4AU, 0x34U, 0x00U),
        '9' to ubyteArrayOf(0x00U, 0x4CU, 0x52U, 0x52U, 0x3CU, 0x00U),
        'a' to ubyteArrayOf(0x00U, 0x30U, 0x4AU, 0x4AU, 0x7CU, 0x40U),
        'b' to ubyteArrayOf(0x00U, 0x7EU, 0x48U, 0x48U, 0x30U, 0x00U),
        'c' to ubyteArrayOf(0x00U, 0x30U, 0x48U, 0x48U, 0x48U, 0x00U),
        'd' to ubyteArrayOf(0x00U, 0x30U, 0x48U, 0x48U, 0x7EU, 0x00U),
        'e' to ubyteArrayOf(0x00U, 0x38U, 0x54U, 0x54U, 0x58U, 0x00U),
        'f' to ubyteArrayOf(0x00U, 0x10U, 0x7CU, 0x12U, 0x02U, 0x00U),
        'h' to ubyteArrayOf(0x00U, 0x7EU, 0x08U, 0x08U, 0x70U, 0x00U),
        'i' to ubyteArrayOf(0x00U, 0x00U, 0x34U, 0x40U, 0x00U, 0x00U),
        'l' to ubyteArrayOf(0x00U, 0x00U, 0x3EU, 0x40U, 0x00U, 0x00U),
        'n' to ubyteArrayOf(0x00U, 0x78U, 0x08U, 0x08U, 0x70U, 0x00U),
        'o' to ubyteArrayOf(0x00U, 0x30U, 0x48U, 0x48U, 0x30U, 0x00U),
        's' to ubyteArrayOf(0x00U, 0x48U, 0x54U, 0x54U, 0x24U, 0x00U),
        't' to ubyteArrayOf(0x00U, 0x08U, 0x3CU, 0x48U, 0x48U, 0x00U),
        'z' to ubyteArrayOf(0x00U, 0x48U, 0x68U, 0x58U, 0x48U, 0x00U),
    )

    fun pickSymbol(symbol: Char): UByteArray {
        return characters[symbol] ?: characters[' ']!!
    }
}